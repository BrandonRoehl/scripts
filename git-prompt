#!/usr/bin/env zsh
autoload -U colors
colors
# Modify the colors and symbols in these variables as desired.
GIT_PROMPT_OPEN="%{$fg_bold[white]%}(%{$reset_color%}"
if [ uname = "Darwin" ]
then
    GIT_PROMPT_SYMBOL="\u2387 "
else
    GIT_PROMPT_SYMBOL="\u2387  "
fi
GIT_PROMPT_AHEAD="\u2191NUM"
GIT_PROMPT_BEHIND="\u2193NUM"
GIT_PROMPT_MERGING="\u2211"
GIT_PROMPT_COLOR="%{$fg[red]%}"
GIT_PROMPT_AHEAD_COLOR="%{$fg[green]%}"
GIT_PROMPT_BEHIND_COLOR="%{$fg[yellow]%}"
GIT_PROMPT_MERGING_COLOR="%{$fg[magenta]%}"
GIT_PROMPT_MODIFIED="%{$fg[red]%}\u2717%{$reset_color%}"
GIT_PROMPT_STAGED="%{$fg[green]%}\u2713%{$reset_color%}"
GIT_PROMPT_UNTRACKED="%{$fg[yellow]%}\u2026%{$reset_color%}"
GIT_PROMPT_CLOSE="%{$fg_bold[white]%})%{$reset_color%}"

# Show different symbols as appropriate for various Git repository states
GIT_WHERE="$(git symbolic-ref -q HEAD 2> /dev/null \
    || git name-rev --name-only --no-undefined --always HEAD 2> /dev/null)"
if [[ -n "$GIT_WHERE" ]]; then
    GIT_COLOR="$GIT_PROMPT_COLOR"
    # Compose this value via multiple conditional appends.
    GIT_STATE=""

    NUM_AHEAD="$(git log --oneline @{u}.. 2> /dev/null\
        | wc -l | tr -d ' ')"
    if [ "$NUM_AHEAD" -gt 0 ]; then
        GIT_COLOR="$GIT_PROMPT_AHEAD_COLOR"
        GIT_STATE="$GIT_STATE${GIT_PROMPT_AHEAD//NUM/$NUM_AHEAD}"
    fi

    NUM_BEHIND="$(git log --oneline ..@{u} 2> /dev/null\
        | wc -l | tr -d ' ')"
    if [ "$NUM_BEHIND" -gt 0 ]; then
        GIT_COLOR="$GIT_PROMPT_BEHIND_COLOR"
        GIT_STATE="$GIT_STATE${GIT_PROMPT_BEHIND//NUM/$NUM_BEHIND}"
    fi

    GIT_DIR="$(git rev-parse --git-dir 2> /dev/null)"
    if [ -n $GIT_DIR ] && test -r $GIT_DIR/MERGE_HEAD; then
        GIT_COLOR="$GIT_PROMPT_MERGING_COLOR"
        GIT_STATE="$GIT_STATE$GIT_PROMPT_MERGING"
    fi

    if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
        GIT_STATE="$GIT_STATE$GIT_PROMPT_UNTRACKED"
    fi

    if ! git diff --quiet 2> /dev/null; then
        GIT_STATE="$GIT_STATE$GIT_PROMPT_MODIFIED"
    fi

    if ! git diff --cached --quiet 2> /dev/null; then
        GIT_STATE="$GIT_STATE$GIT_PROMPT_STAGED"
    fi

    # Compose the final git status line
    GIT_STRING="$GIT_PROMPT_OPEN$GIT_COLOR$GIT_PROMPT_SYMBOL${GIT_WHERE#(refs/heads/|tags/)}%{$reset_color%}"
    if [[ -n $GIT_STATE ]]; then
        GIT_STRING="$GIT_STRING $GIT_STATE"
    fi

    is_zsh=0
    while [ $# -ne 0 ]
    do
        if [ $1 = "--zsh" ]; then
            is_zsh=1
        fi
        shift
    done
    if [ $is_zsh -eq 1 ]; then
        echo "$GIT_STRING$GIT_PROMPT_CLOSE"
    else
        echo "$GIT_STRING$GIT_PROMPT_CLOSE" | sed -e s/%}//g -e s/%{//g
    fi
fi

